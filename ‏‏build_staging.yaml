version: 0.2

phases:
  build:
    commands:
      # Update system and install required packages
      - sudo yum update -y
      - sudo yum install -y unzip
      
      # Install Terraform
      - curl -O https://releases.hashicorp.com/terraform/1.3.6/terraform_1.3.6_linux_amd64.zip
      - unzip terraform_1.3.6_linux_amd64.zip
      - sudo mv terraform /usr/local/bin/
      - terraform version
      
      # Initialize and apply Terraform configuration
      - cd terraform
      - terraform init
      - terraform plan
      - terraform apply --auto-approve
      - cd ..
      
      # Install kubectl
      - curl -LO "https://dl.k8s.io/release/$(curl -sL https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
      - chmod +x kubectl
      - sudo mv kubectl /usr/local/bin/
      - kubectl version --client
      
      # Configure kubectl to connect to EKS
      - aws eks update-kubeconfig --name EKS_STAGE --region us-east-1
      
      # Deploy ArgoCD
      - kubectl create namespace argocd || true
      - kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml
      
      # Wait for ArgoCD to be ready
      - echo "Waiting for ArgoCD to be ready..."
      - kubectl wait --for=condition=available --timeout=300s deployment/argocd-server -n argocd
      
      # Extract ArgoCD initial password
      - ARGO_PASSWORD=$(kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d)
      - echo "ArgoCD Admin Password= $ARGO_PASSWORD"
      
      # Expose ArgoCD (optional, for local testing)
      - kubectl port-forward svc/argocd-server -n argocd 8080:443 &
      
      # Output ArgoCD login info
      - echo "Login to ArgoCD= https://localhost:8080 (admin / $ARGO_PASSWORD)"
      
      # Apply ArgoCD application manifest from external file
      - kubectl apply -f ./argocd/argocd-application.yaml
      
      - echo "ArgoCD application tracking setup complete!"